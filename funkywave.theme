<?php

/**
 * @file
 * Functions to support theming in the Bartik theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\image\Entity\ImageStyle;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;
use Drupal\Core\Link;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
* Implement template_preprocess_node().
*/
function funkywave_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];
  $view_mode = $variables['view_mode'];
  $display_modes = [
    'full',
    'teaser',
    'ngf_teaser_user_commented',
    'ngf_teaser_user_created',
  ];

  if (in_array($view_mode, $display_modes)
    && $node->getType() == 'ngf_discussion') {

    $variables['ngf_sub_picture'] = NULL;
    $variables['ngf_context_text'] = t(
      'Posted @created_date ago',
      [
        '@created_date' => \Drupal::service('date.formatter')->formatTimeDiffSince($node->created->value)
      ]
    );

    $variables['ngf_group_container_class'] = 'profile-shortinfo--no-group';
    if (isset($node->group) && $group = $node->group) {
      $variables['ngf_group_container_class'] = 'profile-shortinfo--group';

      if (!$group->field_ngf_cover_image->isEmpty()) {
        $media_id = $group->get('field_ngf_cover_image')->target_id;
        $media_entity = Media::load($media_id);

        $render = [
          '#theme' => 'image_style',
          '#style_name' => 'thumbnail',
          '#uri' => $media_entity->get('field_media_image')->entity->getFileUri(),
          '#attributes' => ['class' => ['profile-shortinfo__picture profile-shortinfo__picture--group responsive']]
        ];

        $link_render = [
          '#title' => $render,
          '#type' => 'link',
          '#url' => $group->toUrl(),
          '#attributes' => [
            'class' => [
              'profile-shortinfo__link profile-shortinfo__link--group'
            ]
          ]
        ];
        $variables['ngf_sub_picture'] = $link_render;
      }

      $visibility_icon = '';
      if ($group->field_ngf_group_visibility->value == NGF_GROUP_PUBLIC) {
        $visibility_icon = 'fa fa-eye-slash';
      } 
      elseif ($group->field_ngf_group_visibility->value == NGF_GROUP_PRIVATE) {
        $visibility_icon = 'fa fa-lock';
      }
      elseif ($group->field_ngf_group_visibility->value == NGF_GROUP_SECRET) {
        $visibility_icon = 'fa fa-lock';
      }

      $variables['ngf_context_text'] = t(
        'Posted @created_date ago in <a href=":group_url" class="profile-shortinfo__link profile-shortinfo__group-link">@group_title</a>',
        [
          '@created_date' => \Drupal::service('date.formatter')->formatTimeDiffSince($node->created->value),
          ':group_url' => $group->url(),
          '@group_title' => $group->label(),
        ]
      ) . ' <i class="' . $visibility_icon . '"></i>';
    } elseif ($view_mode == 'ngf_teaser_user_commented') {
      $variables['ngf_context_text'] = t('Commented');
    }
  }
}

function funkywave_preprocess_user(&$vars) {
  $user = $vars['user'];
  // get user image
  if (!empty($user->user_picture[0])) {
    $cover_image = $user->user_picture[0]->entity->getFileUri();
    $image_url = ImageStyle::load('thumbnail')->buildUrl($cover_image);
    $vars['user_pic'] = $image_url;
    // get user name
    $vars['user_name'] = $user->getUsername();
  }
}

/**
* Implements template_preprocess_group
*/
function funkywave_preprocess_group(&$variables) {
  $group = $variables['group'];
  $view_mode = $variables['view_mode'];

  if ($group->getGroupType()->id() == 'ngf_event') {
    if ($variables['view_mode'] == 'full') {
      // This is needed so the group name is printed along with {{content}}.
      $variables['content']['label']['#printed'] = FALSE;
    }

    $variables['ngf_group_container_class'] = 'profile-shortinfo--group';
  }

  $display_modes = [
    'teaser',
    'ngf_user_created',
  ];

  if ($group->getGroupType()->id() == 'ngf_discussion_group' && in_array($view_mode, $display_modes)) {
    $variables['ngf_group_container_class'] = 'profile-shortinfo--no-group';
    if ($group->field_ngf_group_visibility->value == NGF_GROUP_PUBLIC) {
      $variables['ngf_context_text'] = t('Public group');
    } 
    elseif ($group->field_ngf_group_visibility->value == NGF_GROUP_PRIVATE) {
      $visibility_icon = 'fa fa-lock';
      $variables['ngf_context_text'] = '<i class="' . $visibility_icon . '"></i> ' . t('Private group');
    }
    elseif ($group->field_ngf_group_visibility->value == NGF_GROUP_SECRET) {
      $visibility_icon = 'fa fa-eye-slash';
      $variables['ngf_context_text'] = '<i class="' . $visibility_icon . '"></i> ' . t('Secret group');
    }
   
  }
}
